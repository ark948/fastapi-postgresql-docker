the goal is to have less and less parameters on the docker command,
and move everything (as much as possible) to either Dockerfile or docker-compose file, or even runserver.py

this finally worked.
do not change anything. just commit and work on it.
make it more complicated step by step


commands: (this version that works, got it from fastapi official documentation): 001
> docker build -t myimage .
> docker run -d --name mycontainer -p 80:80 myimage



also works, 002:
(this time using docker-compose, did not provide any port parameter on command, only in docker-compose)
> docker build . (gave it no name)
> docker-compose up
(since using docker-compose no longer need to use cmd command in Dockerfile)



003:
using uvicorn,
same command as 002, only docker-compose has been changed.
also 127.0.0.1:80 as good as localhost:80
tried changing ports to 8000, works ok (003 2)


004:
trying to add run.py
this is where things failed.
even tried specify exposing host on docker run command


005:
i was able to add run.py to docker eventually
but had to use 0.0.0.0 in run.py (uvicorn.run)
and the result was accessible in 127.0.0.1:80
> docker build -t myimage .
> docker run --name mycontainer -p 80:80 myimage
update 005 2:
using docker-compose
> docker build .
> docker-compoes up



006:
moved main.py to dedicated folder (no __init__.py)
using docker-compose


007:
moved source folder to dedicated backend folder
docker-compose ok



008:
was able to read .env file from pydantic_settings from absolute folder
FINALLY everything works.
fastapi app in its own container
postgresql in container.
fastapi reads env file (env file points to db service in docker-compose)
postgresql has db service in docker-compose with environment variables set.
> docker build .
> docker-compoes up


009:
adding network, why?
apparently even if you don't define a newtork, docker-compose automatically will create a network with generated name.
i suppose as the project gets more complicated, the need to have greater control over their communication raises the need to manually define docker networks.
(but maybe i'm wrong.)


010:
added redis
everything works fine.